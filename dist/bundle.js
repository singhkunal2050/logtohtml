(()=>{"use strict";var e={919:(e,t,n)=>{n.d(t,{A:()=>l});var o=n(601),r=n.n(o),s=n(314),a=n.n(s)()(r());a.push([e.id,'/* Styles for the log window */\n#dynamic-log-window {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 98vw;\n  height: 40%;\n  overflow-y: scroll;\n  background-color: #282828;\n  color: white;\n  font-family: monospace;\n  font-size: 12px;\n  z-index: 9999;\n  display: none;\n  word-break: break-all;\n  /* Firefox-specific scrollbar styling */\n  scrollbar-width: thin;\n  scrollbar-color: #6b6b6b #282828;\n}\n\n/* WebKit-specific scrollbar styling for Chrome, Safari, etc. */\n#dynamic-log-window::-webkit-scrollbar {\n  width: 8px;\n  height: 8px;\n}\n#dynamic-log-window::-webkit-scrollbar-track {\n  background: #282828;\n}\n#dynamic-log-window::-webkit-scrollbar-thumb {\n  background-color: #6b6b6b;\n  border-radius: 4px;\n}\n\n/* Styles for the toggle button */\n#toggle-button {\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  z-index: 10000;\n  background-color: #282828;\n  color: rgb(175, 175, 175);\n  border: none;\n  padding: 10px;\n  cursor: pointer;\n  border-radius: 16px 0 0 0;\n}\n\n/* Log window top header */\n#filter-section {\n  display: flex;\n  padding: 6px;\n  background-color: rgb(51, 51, 51);\n  border-bottom: 1px solid #6b6b6b;\n}\n\n/* Log level filter dropdown */\n#log-filter {\n  color: rgb(140, 140, 140);\n  background-color: rgb(62, 62, 62);\n  border: 1px solid rgb(107, 107, 107);\n  border-radius: 16px;\n  cursor: pointer;\n  padding: 5px;\n}\n\n/* Clear logs button */\n#clear-logs {\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px;\n}\n\n/* Search input */\n#log-search {\n  background: rgb(62, 62, 62);\n  border: 1px solid rgb(107, 107, 107);\n  border-radius: 16px;\n  padding: 0px 15px;\n  color: rgb(171, 165, 165);\n}\n\n.log-message {\n  padding: 5px;\n  margin-bottom: 6px;\n  border-bottom: 1px solid #444;\n}\n\n#log-window-header {\n  position: sticky;\n  top: 0;\n  gap: 10px;\n  z-index: 100;\n}\n\n#log-window-sections {\n  background: #3d3d3d;\n  display: flex;\n  border-bottom: 1px solid #6b6b6b;\n\n  .log-window-section-tab {\n    padding: 10px;\n    cursor: pointer;\n\n    &:hover {\n      background: #6b6b6b;\n    }\n\n    &[data-active="true"] {\n      color: #a8c7fa;\n      border-bottom: 2px solid #a8c7fa;\n    }\n  }\n}\n\n\n/* Network tab container */\n#network-list {\n  padding: 10px;\n  font-family: monospace;\n  font-size: 12px;\n  color: white;\n}\n\n/* Each network request entry */\n#network-list > div {\n  background: #333;\n  padding: 8px;\n  margin-bottom: 8px;\n  border-radius: 6px;\n  border-left: 4px solid #4caf50; /* Green for successful requests */\n  word-break: break-word;\n}\n\n/* Failed requests */\n#network-list > div[data-status="FAILED"] {\n  border-left-color: #ff4d4d; /* Red for errors */\n}\n\n/* Request URL & method */\n#network-list strong {\n  font-size: 13px;\n  color: #a8c7fa;\n}\n\n/* Status & duration */\n#network-list span {\n  font-size: 12px;\n  font-weight: bold;\n}\n\n/* Request details section */\n#network-list details {\n  background: #222;\n  padding: 6px;\n  border-radius: 4px;\n  margin-top: 4px;\n}\n\n/* Summary (expandable section) */\n#network-list summary {\n  cursor: pointer;\n  font-size: 12px;\n  font-weight: bold;\n  color: #f1c40f; /* Yellow highlight */\n}\n\n/* JSON response styling */\n#network-list pre {\n  background: #1e1e1e;\n  color: #e6e6e6;\n  padding: 6px;\n  border-radius: 4px;\n  overflow-x: auto;\n  font-size: 11px;\n  line-height: 1.4;\n}\n\n/* Scrollbar styling */\n#network-list pre::-webkit-scrollbar {\n  width: 6px;\n}\n#network-list pre::-webkit-scrollbar-thumb {\n  background: #6b6b6b;\n  border-radius: 3px;\n}\n\n\n/* Network tab container */\n#network-list {\n  padding: 10px;\n  font-family: monospace;\n  font-size: 12px;\n  color: white;\n\n  /* Each network request entry */\n  > div {\n    background: #333;\n    padding: 8px;\n    margin-bottom: 8px;\n    border-radius: 6px;\n    border-left: 4px solid #4caf50; /* Green for successful requests */\n    word-break: break-word;\n\n    &[data-status="FAILED"] {\n      border-left-color: #ff4d4d; /* Red for errors */\n    }\n\n    /* Request URL & method */\n    strong {\n      font-size: 13px;\n      color: #a8c7fa;\n    }\n\n    /* Status & duration */\n    span {\n      font-size: 12px;\n      font-weight: bold;\n    }\n\n    /* Request details section */\n    details {\n      background: #222;\n      padding: 6px;\n      border-radius: 4px;\n      margin-top: 4px;\n\n      summary {\n        cursor: pointer;\n        font-size: 12px;\n        font-weight: bold;\n        color: #f1c40f; /* Yellow highlight */\n      }\n\n      pre {\n        background: #1e1e1e;\n        color: #e6e6e6;\n        padding: 6px;\n        border-radius: 4px;\n        overflow-x: auto;\n        font-size: 11px;\n        line-height: 1.4;\n\n        /* Scrollbar styling */\n        &::-webkit-scrollbar {\n          width: 6px;\n        }\n\n        &::-webkit-scrollbar-thumb {\n          background: #6b6b6b;\n          border-radius: 3px;\n        }\n      }\n    }\n  }\n}\n\n',""]);const l=a},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,s){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var l=0;l<this.length;l++){var i=this[l][0];null!=i&&(a[i]=!0)}for(var d=0;d<e.length;d++){var c=[].concat(e[d]);o&&a[c[0]]||(void 0!==s&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=s),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),t.push(c))}},t}},601:e=>{e.exports=function(e){return e[1]}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var s=t[o]={id:o,exports:{}};return e[o](s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);const o={log:"transparent",debug:"#264445",error:"#4e3434",warn:"#413c26"},r={console:"Console",network:"Network"},s=["all","log","debug","error","warn"];var a=n(919);const l={getLogStatusColor(e){const t=Number(e);return t>=200&&t<300?"green":t>=300&&t<400?"orange":t>=400&&t<500?"red":"gray"},async testRealFetch(){const e=[{url:"https://jsonplaceholder.typicode.com/posts/1",label:"✅ 200 OK"},{url:"https://jsonplaceholder.typicode.com/invalid-url",label:"❌ 404 Not Found"},{url:"https://httpstat.us/500",label:"🔥 500 Internal Server Error"},{url:"https://httpstat.us/302",label:"🔄 302 Redirect"},{url:"https://httpstat.us/401",label:"🚫 401 Unauthorized"},{url:"https://httpstat.us/403",label:"🚷 403 Forbidden"},{url:"https://httpstat.us/418",label:"☕ 418 I'm a teapot"},{url:"https://httpstat.us/429",label:"⏳ 429 Too Many Requests"},{url:"https://httpstat.us/301",label:"➡️ 301 Moved Permanently"},{url:"https://jsonplaceholder.typicode.com/comments",label:"📝 JSON Response"}];for(let{url:t,label:n}of e)try{const e=performance.now(),o=await fetch(t),r=(performance.now()-e).toFixed(2),s={};let a;o.headers.forEach(((e,t)=>{s[t]=e}));try{a=await o.text()}catch(e){a="Unable to read body"}console.log(`\n${n}`),console.log(`URL: ${t}`),console.log(`Status: ${o.status} ${o.statusText}`),console.log("Headers:",s),console.log("Response Body:",a.substring(0,300)),console.log(`Duration: ${r} ms`)}catch(e){console.error(`\n${n} - Error fetching ${t}:`,e.message)}}};class i extends HTMLElement{isVisible=!0;logs=[];selectedFilter="all";searchKey="";activeTab=r.console;constructor(){super(),this.attachShadow({mode:"open"}),this.addContainerElements(),this.addEventListeners(),this.overrideConsole(),this.overrideFetchXHR()}addContainerElements(){this.container=document.createElement("div");const e=document.createElement("div");e.id="log-window-header",e.innerHTML=`\n        <div id="log-window-sections">\n            <div class="log-window-section-tab" data-tab="console" data-active="true"> \n              Console\n            </div>\n            <div class="log-window-section-tab" data-tab="network">\n              Network\n            </div>\n        </div>\n        <div id="filter-section">\n          <select id="log-filter">\n              ${s.map((e=>`<option value="${e}">${e.toLocaleUpperCase()}</option>`))}\n          </select>\n          <div id="clear-logs">\n              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24">\n                  <path fill="none" stroke="#6b6b6b" stroke-width="2" d="M12,22 C17.5228475,22 22,17.5228475 22,12 C22,6.4771525 17.5228475,2 12,2 C6.4771525,2 2,6.4771525 2,12 C2,17.5228475 6.4771525,22 12,22 Z M5,5 L19,19"></path>\n              </svg>\n          </div>\n          <input id="log-search" placeholder="Search...">\n        </div>\n\n    `;const t=document.createElement("div");t.id="logs-list";const n=document.createElement("div");n.id="network-list",n.style.display="none",this.container.id="dynamic-log-window",this.container.style.display=this.isVisible?"block":"none",this.toggleButton=document.createElement("button"),this.toggleButton.id="toggle-button",this.toggleButton.innerText=this.isVisible?"Hide Logs ▼":"Show Logs ▲",this.container.append(e,t,n);const o=document.createElement("style");console.log({styles:a.A}),o.textContent=a.A,this.shadowRoot.append(o,this.container,this.toggleButton)}addEventListeners(){this.shadowRoot.addEventListener("click",(e=>{"toggle-button"===e.target.id||e.target.closest("#toggle-button")?(this.isVisible=!this.isVisible,this.isVisible?(this.toggleButton.textContent="Hide Logs ▼",this.container.style.display="block"):(this.toggleButton.textContent="Show Logs ▲",this.container.style.display="none")):"clear-logs"===e.target.id||e.target.closest("#clear-logs")?this.shadowRoot.querySelector("#logs-list").innerHTML="":e.target.classList.contains("log-window-section-tab")&&(this.shadowRoot.querySelectorAll(".log-window-section-tab").forEach((e=>{e.dataset.active="false"})),e.target.dataset.active="true",this.setActiveTab(e.target.dataset.tab))})),this.shadowRoot.querySelector("select#log-filter").addEventListener("change",(e=>{this.selectedFilter=e.target.value,this.shadowRoot.querySelectorAll("div.log-message").forEach((e=>{"all"===this.selectedFilter||e.dataset.type===this.selectedFilter?e.style.display="block":e.style.display="none"}))})),this.shadowRoot.querySelector("#log-search").addEventListener("input",(e=>{this.searchKey=e.target.value.toLowerCase(),Array.from(this.shadowRoot.querySelector("#logs-list").querySelectorAll("div.log-message")).filter((e=>"all"===this.selectedFilter||e.dataset.type===this.selectedFilter||void 0)).forEach((e=>{e.textContent.toLowerCase().includes(this.searchKey)?e.style.display="block":e.style.display="none"}))}))}overrideConsole(){const e={log:console.log,debug:console.debug,error:console.error,warn:console.warn},t=(e,t)=>{this.logs.push({type:e,args:t});const n=this.container.querySelector("#logs-list");if(n){const r=document.createElement("div");r.classList.add("log-message"),r.dataset.type=e,r.style.backgroundColor=o[e]||"white";const s=(new Date).toISOString(),a=t.map((e=>"object"==typeof e?JSON.stringify(e,null,2):e)).join(" "),l=document.createElement("div");l.textContent=`[${s}] [${e.toUpperCase()}] ${a}`,r.appendChild(l),t.forEach((t=>{if("object"==typeof t&&null!==t&&Object.keys(t)?.length){const n=document.createElement("details");n.style.opacity="0.4",n.style.marginTop="5px";const o=document.createElement("summary");o.textContent=`Details (${e})`,o.style.cursor="pointer",n.appendChild(o);const s=document.createElement("pre");s.style.whiteSpace="pre-wrap",s.style.color="#ccc",s.textContent=JSON.stringify(t,null,2),n.appendChild(s),r.appendChild(n)}})),n.appendChild(r),n.scrollTop=n.scrollHeight}};console.log=(...n)=>{e.log(...n),t("log",n)},console.debug=(...n)=>{e.debug(...n),t("debug",n)},console.error=(...n)=>{e.error(...n),t("error",n)},console.warn=(...n)=>{e.warn(...n),t("warn",n)}}overrideFetchXHR(){const e=window.fetch;window.fetch=async(...t)=>{const[n,o]=t,r=o?.method||"GET",s=o?.body||null,a=o?.headers||{},l=performance.now();return e(...t).then((async e=>{const t=(performance.now()-l).toFixed(2),o=e.clone(),i=await o.text();return this.logNetworkRequest({url:n,method:r,requestBody:s,requestHeaders:a,status:e.status,statusText:e.statusText,responseHeaders:e.headers,responseBody:i,duration:t}),e})).catch((e=>{throw this.logNetworkRequest({url:n,method:r,requestBody:s,requestHeaders:a,status:"FAILED",responseBody:e.message}),e}))};const t=window.XMLHttpRequest;window.XMLHttpRequest=function(){const e=new t,n=performance.now();let o={};return e.open=function(e,n){o={url:n,method:e},t.prototype.open.apply(this,arguments)},e.setRequestHeader=function(e,n){o.headers||(o.headers={}),o.headers[e]=n,t.prototype.setRequestHeader.apply(this,arguments)},e.addEventListener("load",(()=>{const t=performance.now();o.duration=(t-n).toFixed(2),o.status=e.status,o.statusText=e.statusText,o.responseBody=e.responseText,this.logNetworkRequest(o)})),e}}logNetworkRequest(e){const t=this.shadowRoot.getElementById("network-list"),n=document.createElement("div");n.innerHTML=`\n        <div>\n            <strong>${e.method} ${e.url}</strong> \n            <span style="color: ${l.getLogStatusColor(e.status)}">\n                ${e.status} (${e.duration} ms)\n            </span>\n        </div>\n        <details>\n            <summary>Request Details</summary>\n            <pre>${JSON.stringify(e,null,2)}</pre>\n        </details>\n    `,t.appendChild(n)}testConsoleMessages(){console.log("This is a log message",Math.random(),{key:"value"}),console.debug("This is a debug message",[Math.random(),Math.random(),Math.random()],new Date),console.error("This is an error message",new Error("Sample error"+Math.random())),console.warn("This is a warning message",!0,null)}setActiveTab(e){this.activeTab=r[e],this.activeTab===r.console?(this.shadowRoot.querySelector("#logs-list").style.display="block",this.shadowRoot.querySelector("#network-list").style.display="none"):this.activeTab===r.network&&(this.shadowRoot.querySelector("#logs-list").style.display="none",this.shadowRoot.querySelector("#network-list").style.display="block")}}if(customElements.define("log-window",i),"true"===new URLSearchParams(window.location.search).get("logtohtml")){const e=document.createElement("log-window");document.body.appendChild(e),console.log("[LOGTOHTML] Library version: 0.0.11")}})();